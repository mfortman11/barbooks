---
import Layout from '../layouts/Layout.astro';
import List from '../components/List.astro';
import Matchup from '../components/Matchup.astro';
import { pageConfig } from '../utils/pageConfig.js';
import type { GetStaticPaths } from 'astro';
import type { PageConfiguration } from '../utils/pageTypes.js';

export const getStaticPaths: GetStaticPaths = () => {
  const paths: Array<{ params: { page: string } }> = [];
  for (let i = 1; i <= pageConfig.totalPages; i++) {
    paths.push({
      params: { page: i.toString() }
    });
  }
  return paths;
};

const { page } = Astro.params;
const pageNumber: number = parseInt(page as string);

if (!pageConfig.pageExists(pageNumber)) {
  return Astro.redirect('/barbooks/1/');
}

const pageConfiguration: PageConfiguration = pageConfig.getPageConfiguration(pageNumber);
const answerKeyUrl: string = pageConfig.getAnswerKeyUrl(pageNumber);
const title: string = `Book Reader - Page ${pageNumber}`;
---

<Layout title={title} currentPage={pageNumber} totalPages={pageConfig.totalPages} answerKeyUrl={answerKeyUrl} pageTitle={(pageConfiguration.type === 'list' || pageConfiguration.type === 'matchup') ? pageConfiguration.title : undefined} pageDescription={(pageConfiguration.type === 'list' || pageConfiguration.type === 'matchup') ? pageConfiguration.description : undefined} actionContent={pageConfiguration.actionContent}>
  <div class="relative bg-white rounded-lg shadow-lg p-8 px-24 pt-2 max-w-4xl mx-auto print:bg-transparent print:shadow-none print:p-10 print:pt-0 print:max-w-none print:m-0 print:pb-16 print:px-32 print:rounded-none">
    <div class="prose prose-lg max-w-none">
      {pageConfiguration.type === 'list' && (
        <List
          items={pageConfiguration.items}
          columns={pageConfiguration.columns}
          showInstructions={pageConfiguration.showInstructions}
          instructionText={pageConfiguration.instructionText}
        />
      )}

      {pageConfiguration.type === 'matchup' && (
        <Matchup
          items={pageConfiguration.items}
          columns={pageConfiguration.columns}
          showInstructions={pageConfiguration.showInstructions}
          instructionText={pageConfiguration.instructionText}
        />
      )}
      
      {(pageConfiguration.type === 'text' || pageConfiguration.type === 'custom') && (
        <div class="text-gray-700 leading-relaxed text-lg print:text-black print:text-base print:leading-relaxed" set:html={pageConfiguration.content}></div>
      )}
    </div>
  </div>
</Layout>